{"remainingRequest":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js!/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/YouTube_Full-Stack/client/src/views/View.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/YouTube_Full-Stack/client/src/views/View.vue","mtime":1548955925372},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PostService from '../PostService';\nexport default {\n  name: 'View',\n  data: function data() {\n    return {\n      posts: [],\n      error: '',\n      id: ''\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.id = this.$route.query.id;\n              _context.prev = 1;\n              _context.next = 4;\n              return PostService.getPosts(this.id);\n\n            case 4:\n              this.posts = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              this.error = _context.t0.message; //console.log('ZZZZZZZZ');\n              //console.log(this.error);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 7]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    EditPost: function () {\n      var _EditPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(id) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"AAAAAAAAA\");\n                this.$router.push(\"New?id=\".concat(id));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function EditPost(_x) {\n        return _EditPost.apply(this, arguments);\n      }\n\n      return EditPost;\n    }()\n  }\n};",{"version":3,"sources":["View.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,OAAA,WAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,EAAA,EAAA;AAHA,KAAA;AAMA,GATA;AAWA,EAAA,OAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,mBAAA,EAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA;AAZA;AAAA;AAAA,qBAeA,WAAA,CAAA,QAAA,CAAA,KAAA,EAAA,CAfA;;AAAA;AAeA,mBAAA,KAfA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBA,mBAAA,KAAA,GAAA,YAAA,OAAA,CAjBA,CAkBA;AACA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA,gDACA,EADA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,OAAA,CAAA,GAAA,CAAA,WAAA;AACA,qBAAA,OAAA,CAAA,IAAA,kBAAA,EAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAvBA,CAAA","sourcesContent":["<template>\r\n\r\n  <div class=\"container\" v-if=\"!error\">\r\n    <h1>ID:  {{ posts[0].ownID }}</h1>\r\n    <div class=\"create-post\">  \r\n\r\n\r\n<ul>\r\n      <li><label>Already Customer: </label> <span v-if=\"posts[0].AlreadyCustomer\"><strong>Yes</strong></span><span v-else><strong>No</strong></span></li>\r\n      <li><label>Contact Date: </label> <strong>{{ posts[0].DateContact }}</strong></li>\r\n      <li><label>Source: </label> <strong>{{ posts[0].Source }}</strong></li>\r\n      <h2>Wedding Info</h2>      \r\n            <ul>\r\n                <li><label>Date Wedding: </label> <strong>{{ posts[0].WeddingInfo.DateWedding }}</strong></li>\r\n                <li><label>Wedding Location: </label> <strong>{{ posts[0].WeddingInfo.WeddingLocation }}</strong></li>\r\n            </ul>\r\n      <h2>Bride Info</h2>      \r\n            <ul>\r\n                <li><label>Bride Name: </label> <strong>{{ posts[0].BrideInfo.BrideName }} {{ posts[0].BrideInfo.BrideSurname }}</strong></li>\r\n                <li><label>Bride Telefon Number: </label> <strong>{{ posts[0].BrideInfo.BrideTel }}</strong></li>\r\n                <li><label>Bride EMail: </label> <strong>{{ posts[0].BrideInfo.BrideEmail }}</strong></li>\r\n            </ul>\r\n\r\n      <h2>Groom Info</h2>      \r\n            <ul>\r\n                <li><label>Groom Name: </label> <strong>{{ posts[0].GroomInfo.GroomName }} {{ posts[0].GroomInfo.GroomSurname }}</strong></li>\r\n                <li><label>Groom Telefon Number: </label> <strong>{{ posts[0].GroomInfo.GroomTel }}</strong></li>\r\n                <li><label>Groom EMail: </label> <strong>{{ posts[0].GroomInfo.GroomEmail }}</strong></li>\r\n            </ul>            \r\n        <br>\r\n\r\n      <li><label>Couple Address: </label> <strong>{{ posts[0].CoupleAddress }}</strong></li>\r\n\r\n      <h2>Contract Info</h2>      \r\n            <ul>\r\n                <li><label>Contract Date: </label> <strong>{{ posts[0].ContractInfo.ContractDate }}</strong></li>\r\n                <li><label>Ordered Services: </label> <strong>{{ posts[0].ContractInfo.OrderedServices }}</strong></li>\r\n                <li><label>Ordered Products: </label> <strong>{{ posts[0].ContractInfo.OrderedProducts }}</strong></li>\r\n                <li><label>Number of Hours: </label> <strong>{{ posts[0].ContractInfo.NumberHours }}</strong></li>\r\n                <li><label>Total Price: </label> <strong>{{ posts[0].ContractInfo.TotalPrice }}</strong></li>\r\n                <li><label>Deposit to Pay: </label> <strong>{{ posts[0].ContractInfo.DepositToPay }}</strong></li>\r\n                <li><label>Deposit already Payed?: </label> <strong>{{ posts[0].ContractInfo.DepositPayed }}</strong></li>\r\n                <li><label>Permision to public Fotos: </label> <strong>{{ posts[0].ContractInfo.PermisionPublic }}</strong></li>\r\n                \r\n            </ul>  \r\n        <br>\r\n\r\n      <li><label>Text, Comment: </label> <strong>{{ posts[0].Comments }}</strong></li>\r\n\r\n</ul>   \r\n<br><br>\r\n\r\n      <button class=\"btn\" v-on:click=\"EditPost\">Edit</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container\" v-else>\r\n    There is a error\r\n</div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport PostService from '../PostService'\r\n\r\nexport default {\r\n  name: 'View',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      error: '',\r\n      id: ''\r\n      \r\n    }\r\n  },\r\n  \r\n  async created() {\r\n      this.id = this.$route.query.id;\r\n\r\n    try {\r\n      this.posts = await PostService.getPosts(this.id);      \r\n    } catch(err) {\r\n      this.error = err.message;\r\n      //console.log('ZZZZZZZZ');\r\n      //console.log(this.error);\r\n    }    \r\n  },\r\n  \r\n  methods: {\r\n    async EditPost(id) {\r\n      console.log(\"AAAAAAAAA\");\r\n      this.$router.push(`New?id=${id}`);\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n div.create-post {\r\n   text-align: left;\r\n   /*max-width: 900px;*/\r\n   margin-left: auto;\r\n   margin-right: auto;   \r\n }\r\n\r\n\r\n  div.create-post label {\r\n    color: #919191;\r\n    font-size: 18px;\r\n\r\n  }\r\n\r\n  div.container {\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  p.error {\r\n    border: 1px solid #ff5b5f;\r\n    background-color: #aaa5ee;\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .btn{\r\n    display: inline-block;\r\n    border: none;\r\n    background: #555;\r\n    color: #fff;\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn:hover{\r\n    background: #666;\r\n  }\r\n\r\n\r\n\r\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\r\n@media screen and (max-width: 600px) {\r\n  .divTableHead, .divTableCell, .create-post input[type=submit] {\r\n    width: 100%;\r\n    margin-top: 0;\r\n  }\r\n}\r\n\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}