{"remainingRequest":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js!/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/YouTube_Full-Stack/client/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/YouTube_Full-Stack/client/src/views/Home.vue","mtime":1551807877085},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PostService from '../PostService';\nimport moment from 'moment';\nexport default {\n  /*props: [ 'windowWidth','windowHeight','msg'],\r\n  props:{\r\n      windowWidth:{\r\n          type:Number,\r\n          default:15\r\n      },\r\n      msg:{\r\n          type:String,\r\n          default:'hola'\r\n      }\r\n  },*/\n  name: 'Home',\n\n  /*\r\n  template: `\r\n  \t<div>\r\n  \t\t<div>Execute only once '{{name}}', Not initialized again？？？</div>\r\n    \t<div>Current route '{{$route.params.name}}'</div>\r\n    </div>`,\r\n    */\n  data: function data() {\n    return {\n      //windowWidth: 0,\n      //windowHeight: 0,\n      joder: 'JODER',\n      AlreadyCustomer: false,\n      ActivCustomer: false,\n      moment: moment,\n      name: this.$route.params.home,\n      posts: {\n        0: {\n          EventInfo: {},\n          Client1Info: {},\n          Client2Info: {},\n          ContractInfo: {}\n        }\n      },\n      posttoview: '',\n      error: '',\n      ownID: '',\n      //bridename: '',\n      text: '',\n      YearsArray: [],\n      //YearChoosed: [new Date().getFullYear()]\n      YearChoosed: []\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var i, ii;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return PostService.getPosts(false, this.ActivCustomer, this.AlreadyCustomer, this.year);\n\n            case 3:\n              this.posts = _context.sent;\n              //this. ActivCustomer = true;\n              this.Paramsschange();\n              this.posts.sort(this.compare);\n              ii = 0;\n\n              for (i = 0; i < this.posts.length; i++) {\n                //text += cars[i] + \"<br>\";     \n                this.years = this.posts[i].EventInfo.DateEvent.substring(0, 4); //console.log(this.years);\n\n                if (!this.YearsArray.includes(this.years)) {\n                  this.YearsArray[ii] = this.years;\n                  ii++;\n                }\n              }\n\n              this.YearsArray.sort();\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              this.error = _context.t0.message;\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 11]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n  /*,\r\n  async mounted() {\r\n     try {\r\n      this.posts = await PostService.getPosts();\r\n    } catch(err) {\r\n      this.error = err.message;\r\n    }\r\n  }*/\n  ,\n  methods: {\n    compare: function compare(a, b) {\n      // Use toUpperCase() to ignore character casing\n      var DateContactA = a.DateContact.toUpperCase();\n      var DateContactB = b.DateContact.toUpperCase();\n      var comparison = 0;\n\n      if (DateContactA > DateContactB) {\n        comparison = 1;\n      } else if (DateContactA < DateContactB) {\n        comparison = -1;\n      }\n\n      return comparison * -1;\n    },\n\n    /*\r\n    async EditPost(id) {\r\n      this.$router.push(`Edit?id=${id}`);\r\n      \r\n    },\r\n    */\n    deletePost: function () {\n      var _deletePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(id) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return PostService.deletePost(id, '');\n\n              case 2:\n                _context2.next = 4;\n                return PostService.getPosts();\n\n              case 4:\n                this.posts = _context2.sent;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function deletePost(_x) {\n        return _deletePost.apply(this, arguments);\n      }\n\n      return deletePost;\n    }(),\n    viewPost: function viewPost(id) {\n      this.$router.push(\"ViewCostumer?id=\".concat(id));\n    },\n    show: function show() {\n      var _this = this;\n\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var ownID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      //this.$modal.show('hello-world');\n      this.$modal.show('dialog', {\n        title: 'Delete Entry ' + ownID,\n        text: 'Are you sure you want to delete customer and all its messages???',\n        buttons: [{\n          title: 'Delete',\n          //handler: () => { alert('Woot!') }\n          handler: function handler() {\n            _this.deletePost(id);\n\n            _this.hide();\n          }\n        }, {\n          title: '',\n          // Button title\n          default: true,\n          // Will be triggered by default if 'Enter' pressed.\n          handler: function handler() {\n            _this.hide();\n          } // Button click handler\n\n        }, {\n          title: 'Close'\n        }]\n      });\n    },\n    hide: function hide() {\n      this.$modal.hide('dialog');\n    },\n    Paramsschange: function () {\n      var _Paramsschange = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return PostService.getPosts(false, this.ActivCustomer, this.AlreadyCustomer, this.YearChoosed);\n\n              case 3:\n                this.posts = _context3.sent;\n                this.posts.sort(this.compare); //console.log(this.posts);\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.error = _context3.t0.message;\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      function Paramsschange() {\n        return _Paramsschange.apply(this, arguments);\n      }\n\n      return Paramsschange;\n    }()\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <v-dialog/>\r\n    <h1>List of Customers</h1>    \r\n    <!--aaaa: {{ windowWidth }} - {{joder}} - {{msg}}-->\r\n      \r\n    \r\n    <div class=\"search\">     \r\n      <div class=\"search1\">\r\n        <p class=\"error\" v-if=\"error\">{{ error }}</p>\r\n        <label>Already Customer</label> <input class=\"checkbox\" type=\"checkbox\" id=\"checkbox\" v-on:change=\"Paramsschange\" v-model=\"AlreadyCustomer\"> | \r\n        <label>Activ Customer</label> <input class=\"checkbox\" type=\"checkbox\" id=\"checkbox\" v-on:change=\"Paramsschange\" v-model=\"ActivCustomer\">\r\n      </div>\r\n      <div class=\"search2\">\r\n        <label>Select Event Years: </label>\r\n        <span style=\"margin-right:10px;\"\r\n          v-for=\"(Year, index) in YearsArray\"\r\n          v-bind:item=\"Year\"\r\n          v-bind:index=\"index\"\r\n          v-bind:key=\"Year\"\r\n        >\r\n        <span class=\"checkbox\">  {{Year}} </span> <input type=\"checkbox\" v-on:change=\"Paramsschange\" :value=\"Year\" v-model=\"YearChoosed\">  </span>\r\n      </div>\r\n    </div>\r\n    \r\n\r\n    <div class=\"posts-container\">\r\n      <div class=\"divTable blueTable\">\r\n        <div class=\"divTableHeading\">\r\n          <div class=\"divTableRow\">\r\n            <div class=\"divTableHead\"></div>\r\n            <div class=\"divTableHead\"></div>\r\n            <div class=\"divTableHead\"></div>\r\n            <div class=\"divTableHead\">ID</div>\r\n            <div class=\"divTableHead\">Event Date</div>\r\n            <div class=\"divTableHead\">Location</div>\r\n            <div class=\"divTableHead\">Contact Person 1</div>\r\n            <div class=\"divTableHead\">Contact Person 2</div>\r\n            <div class=\"divTableHead\">Contact Date</div>\r\n            <div class=\"divTableHead\">Contract Date</div>\r\n            <div class=\"divTableHead\">Hours</div>\r\n            <div class=\"divTableHead\">Total Price</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"divTableBody post\"\r\n          v-for=\"(post, index) in posts\"\r\n          v-bind:item=\"post\"\r\n          v-bind:index=\"index\"\r\n          v-bind:key=\"post._id\"\r\n          v-on:dblclick=\"viewPost(post._id)\"\r\n        >\r\n          \r\n          <div class=\"divTableRow\"> \r\n            <div class=\"divTableCell\"><button class=\"btn\" v-on:click=\"show(post._id, post.ownID)\">Delete</button></div>         \r\n            <div class=\"divTableCell\"><button class=\"btn\" v-on:click=\"$router.push('Edit?id=' + post._id)\">Edit</button></div>  \r\n            <div class=\"divTableCell\"><button class=\"btn\" v-on:click=\"$router.push('insertinfo?id=' + post._id)\">Message</button></div>        \r\n            <div class=\"divTableCell\">{{ post.ownID }}</div>\r\n            <div class=\"divTableCell\" v-if=\"moment(post.EventInfo.DateEvent, moment.ISO_8601, true).isValid()\">{{ moment(post.EventInfo.DateEvent).format('DD.MM.YYYY') }}</div>\r\n            <div class=\"divTableCell\" v-else>{{ post.EventInfo.DateEvent }}</div>\r\n            <div class=\"divTableCell\">{{ post.EventInfo.EventLocation}}</div>\r\n            <div class=\"divTableCell\">{{ post.Client1Info.Client1Name + ' ' +  post.Client1Info.Client1Surname}}</div>\r\n            <div class=\"divTableCell\">{{ post.Client2Info.Client2Name + ' ' +  post.Client2Info.Client2Surname}}</div>\r\n            <div class=\"divTableCell\" v-if=\"moment(post.DateContact, moment.ISO_8601, true).isValid()\">{{ moment(post.DateContact).format('DD.MM.YYYY') }}</div>\r\n            <div class=\"divTableCell\" v-else>{{ post.DateContact }}</div>\r\n            <div class=\"divTableCell\" v-if=\"moment(post.ContractInfo.ContractDate, moment.ISO_8601, true).isValid()\">{{ moment(post.ContractInfo.ContractDate).format('DD.MM.YYYY') }}</div>\r\n            <div class=\"divTableCell\" v-else>{{ post.ContractInfo.ContractDate }}</div>\r\n            <div class=\"divTableCell\">{{ post.ContractInfo.NumberHours}}</div>\r\n            <div class=\"divTableCell\">{{ post.ContractInfo.TotalPrice}}€</div>\r\n          </div>\r\n        </div>  \r\n      </div>      \r\n    </div>  \r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport PostService from '../PostService'\r\nimport moment from 'moment'\r\n\r\n\r\nexport default {\r\n  /*props: [ 'windowWidth','windowHeight','msg'],\r\n  props:{\r\n      windowWidth:{\r\n          type:Number,\r\n          default:15\r\n      },\r\n      msg:{\r\n          type:String,\r\n          default:'hola'\r\n      }\r\n  },*/\r\n  name: 'Home',\r\n  /*\r\n  template: `\r\n  \t<div>\r\n  \t\t<div>Execute only once '{{name}}', Not initialized again？？？</div>\r\n    \t<div>Current route '{{$route.params.name}}'</div>\r\n    </div>`,\r\n    */\r\n  data() {\r\n    return {\r\n      //windowWidth: 0,\r\n      //windowHeight: 0,\r\n      joder:'JODER',\r\n      AlreadyCustomer: false,\r\n      ActivCustomer: false,\r\n      moment:moment,\r\n      name: this.$route.params.home,\r\n      posts: {\r\n        0: {\r\n          EventInfo:{\r\n          },\r\n          Client1Info: {\r\n          },\r\n          Client2Info: {\r\n          },\r\n          ContractInfo: {\r\n          }\r\n        }\r\n      },\r\n      posttoview: '',\r\n      error: '',\r\n      ownID: '',\r\n      //bridename: '',\r\n      text: '',\r\n      YearsArray: [],\r\n      //YearChoosed: [new Date().getFullYear()]\r\n      YearChoosed: []\r\n    }\r\n  },\r\n  async created() {\r\n    //this.id = this.$route.query.id;\r\n    //this.windowWidth = 1234;\r\n    try {\r\n      this.posts = await PostService.getPosts(false, this.ActivCustomer, this.AlreadyCustomer, this.year);\r\n      //this. ActivCustomer = true;\r\n      this.Paramsschange();      \r\n\r\n      this.posts.sort(this.compare);\r\n      \r\n      let i;\r\n      let ii = 0;\r\n      for (i = 0; i < this.posts.length; i++) {\r\n        //text += cars[i] + \"<br>\";     \r\n        this.years = this.posts[i].EventInfo.DateEvent.substring(0,4);\r\n        //console.log(this.years);\r\n        if(!this.YearsArray.includes(this.years)){\r\n          this.YearsArray[ii] = this.years;\r\n          ii++;\r\n        }\r\n      }\r\n      this.YearsArray.sort();\r\n\r\n    } catch(err) {\r\n      this.error = err.message;\r\n    }\r\n\r\n  }\r\n  /*,\r\n  async mounted() {\r\n     try {\r\n      this.posts = await PostService.getPosts();\r\n    } catch(err) {\r\n      this.error = err.message;\r\n    }\r\n  }*/,\r\n  \r\n  methods: {\r\n\r\n    compare(a, b) {\r\n      // Use toUpperCase() to ignore character casing\r\n      const DateContactA = a.DateContact.toUpperCase();\r\n      const DateContactB = b.DateContact.toUpperCase();\r\n\r\n      let comparison = 0;\r\n      if (DateContactA > DateContactB) {\r\n        comparison = 1;\r\n      } else if (DateContactA < DateContactB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison * -1 ;\r\n    },\r\n    /*\r\n    async EditPost(id) {\r\n      this.$router.push(`Edit?id=${id}`);\r\n      \r\n    },\r\n    */\r\n\r\n    async deletePost(id){\r\n      await PostService.deletePost(id, '');\r\n      this.posts = await PostService.getPosts();\r\n      //this.$router.push('\\/');\r\n    },\r\n\r\n    viewPost(id){      \r\n      this.$router.push(`ViewCostumer?id=${id}`);\r\n    },\r\n\r\n    show (id = '', ownID = '') {\r\n      //this.$modal.show('hello-world');\r\n      \r\n      this.$modal.show('dialog', {\r\n        title: 'Delete Entry ' + ownID,\r\n        text: 'Are you sure you want to delete customer and all its messages???',\r\n        buttons: [\r\n          {\r\n            title: 'Delete',\r\n            //handler: () => { alert('Woot!') }\r\n            handler: () => { \r\n                this.deletePost(id); \r\n                this.hide(); }\r\n          },\r\n          {\r\n            title: '',       // Button title\r\n            default: true,    // Will be triggered by default if 'Enter' pressed.\r\n            handler: () => { this.hide(); } // Button click handler\r\n          },\r\n          {\r\n            title: 'Close'\r\n          }\r\n      ]\r\n      })\r\n      \r\n    },\r\n\r\n    hide () {\r\n      this.$modal.hide('dialog');\r\n    },\r\n\r\n    async Paramsschange() {\r\n      try {\r\n        //console.log('this.AlreadyCustomer: ',this.AlreadyCustomer);\r\n        this.posts = await PostService.getPosts(false, this.ActivCustomer, this.AlreadyCustomer, this.YearChoosed);\r\n        this.posts.sort(this.compare);\r\n        //console.log(this.posts);\r\n      } catch(err) {\r\n        this.error = err.message;\r\n      }\r\n    } \r\n\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  div.search {\r\n    margin-bottom: 60px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  div.search .search1 {\r\n    float:left; \r\n    margin-right:50px;\r\n  }\r\n\r\n  div.search .search2 {\r\n    float:left; \r\n  }\r\n\r\n  .v--modal-overlay {\r\n    background-color: rgba(255, 0, 0, .1);\r\n  }\r\n\r\n  .btn{\r\n    display: inline-block;\r\n    border: none;\r\n    background: rgb(197, 197, 197);\r\n    color: #fff;\r\n    padding: 2px 5px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn:hover{\r\n    background: rgb(155, 155, 155);\r\n  }\r\n\r\n\r\n  div.container {\r\n    max-width: 100%;\r\n    margin: 0 ;\r\n    padding: 20px;\r\n    background-color:#f0f0f0;\r\n  }\r\n\r\n  p.error {\r\n    border: 1px solid #ff5b5f;\r\n    background-color: #aaa5ee;\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  div.post {\r\n    position: relative;\r\n    border: 1px solid #5bd658;\r\n    padding: 0px 10px 0px 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n\r\n  p.text {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  div.blueTable {\r\n  width: 100%;\r\n  text-align: left;\r\n  border-bottom: 1px solid rgb(226, 226, 226);\r\n  }\r\n\r\n  .divTable.blueTable .divTableCell, .divTable.blueTable .divTableHead {\r\n    padding: 3px 3px;\r\n    border-bottom: 1px solid rgb(226, 226, 226);\r\n  }\r\n  .divTable.blueTable .divTableBody .divTableCell {\r\n    font-size: 13px;\r\n    background: #ffffff;\r\n  }\r\n  .divTable.blueTable .divTableRow:nth-child(even) {\r\n    /*background: #D0E4F5;*/\r\n  }\r\n\r\n  .divTable.blueTable .divTableHeading {\r\n    background: #ffffff;\r\n    /*\r\n    background: -moz-linear-gradient(top, #949494 0%, #7e7e7e 66%, #707070 100%);\r\n    background: -webkit-linear-gradient(top, #949494 0%, #7e7e7e 66%, #707070 100%);\r\n    background: linear-gradient(to bottom, #949494 0%, #7e7e7e 66%, #707070 100%);\r\n    border-bottom: 2px solid #444444;\r\n    */\r\n  }\r\n\r\n  .divTable.blueTable .divTableHeading .divTableHead {\r\n    font-size: 15px;\r\n    /*font-weight: bold;*/\r\n    color: rgb(0, 0, 0);\r\n    /*border-left: 2px solid rgb(212, 212, 212);*/\r\n  }\r\n\r\n  .divTable.blueTable .divTableHeading .divTableHead:first-child {\r\n    /*border-left: none;*/\r\n  }\r\n\r\n  .blueTable .tableFootStyle {\r\n    /*\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n    background: #D0E4F5;\r\n    background: -moz-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);\r\n    background: -webkit-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);\r\n    background: linear-gradient(to bottom, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);\r\n    border-top: 2px solid #444444;\r\n    */\r\n  }\r\n  .blueTable .tableFootStyle {\r\n    font-size: 14px;\r\n  }\r\n  .blueTable .tableFootStyle .links {\r\n    text-align: right;\r\n  }\r\n  .blueTable .tableFootStyle .links a{\r\n    display: inline-block;\r\n    background: #1C6EA4;\r\n    color: #FFFFFF;\r\n    padding: 2px 8px;\r\n    border-radius: 5px;\r\n  }\r\n  .blueTable.outerTableFooter {\r\n    border-top: none;\r\n  }\r\n  .blueTable.outerTableFooter .tableFootStyle {\r\n    padding: 3px 5px; \r\n  }\r\n\r\n  /* DivTable.com */\r\n  .divTable{ display: table; }\r\n  .divTableRow { display: table-row; }\r\n  .divTableCell, .divTableHead { display: table-cell;}\r\n  .divTableHeading { display: table-header-group;}\r\n  .divTableFoot { display: table-footer-group;}\r\n  .divTableBody { display: table-row-group;}\r\n\r\n  .fade-enter-active, .fade-leave-active {\r\n    transition: opacity 3s;\r\n  }\r\n  .fade-enter, .fade-leave-to {\r\n    opacity: 0;\r\n  }\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}