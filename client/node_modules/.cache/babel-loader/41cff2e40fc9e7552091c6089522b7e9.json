{"remainingRequest":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js!/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/YouTube_Full-Stack/client/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/YouTube_Full-Stack/client/src/views/Home.vue","mtime":1550251749912},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PostService from '../PostService';\nimport moment from 'moment';\nexport default {\n  name: 'Home',\n  template: \"\\n  \\t<div>\\n  \\t\\t<div>Execute only once '{{name}}', Not initialized again\\uFF1F\\uFF1F\\uFF1F</div>\\n    \\t<div>Current route '{{$route.params.name}}'</div>\\n    </div>\",\n  data: function data() {\n    return {\n      moment: moment,\n      name: this.$route.params.home,\n      posts: {\n        0: {\n          WeddingInfo: {},\n          BrideInfo: {},\n          GroomInfo: {},\n          ContractInfo: {}\n        }\n      },\n      posttoview: '',\n      error: '',\n      ownID: '',\n      bridename: '',\n      text: ''\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return PostService.getPosts();\n\n            case 3:\n              this.posts = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              this.error = _context.t0.message;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 6]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return PostService.getPosts();\n\n            case 3:\n              this.posts = _context2.sent;\n              _context2.next = 9;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              this.error = _context2.t0.message;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[0, 6]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    EditPost: function () {\n      var _EditPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(id) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.$router.push(\"Edit?id=\".concat(id));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function EditPost(_x) {\n        return _EditPost.apply(this, arguments);\n      }\n\n      return EditPost;\n    }(),\n    deletePost: function () {\n      var _deletePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(id) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return PostService.deletePost(id);\n\n              case 2:\n                _context4.next = 4;\n                return PostService.getPosts();\n\n              case 4:\n                this.posts = _context4.sent;\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function deletePost(_x2) {\n        return _deletePost.apply(this, arguments);\n      }\n\n      return deletePost;\n    }(),\n    createPost: function () {\n      var _createPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return PostService.insertPost(this.bridename, this.text);\n\n              case 2:\n                _context5.next = 4;\n                return PostService.getPosts();\n\n              case 4:\n                this.posts = _context5.sent;\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function createPost() {\n        return _createPost.apply(this, arguments);\n      }\n\n      return createPost;\n    }()\n    /*,\r\n    async deletePost(id){\r\n     await PostService.deletePost(id);\r\n     this.posts = await PostService.getPosts();\r\n    }*/\n    ,\n    viewPost: function viewPost(id) {\n      this.$router.push(\"ViewCostumer?id=\".concat(id));\n    },\n    show: function show() {\n      var _this = this;\n\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var ownID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      //this.$modal.show('hello-world');\n      this.$modal.show('dialog', {\n        title: 'Delete Entry ' + ownID,\n        text: 'Are you sure you want to delete customer???',\n        buttons: [{\n          title: 'Delete',\n          //handler: () => { alert('Woot!') }\n          handler: function handler() {\n            _this.deletePost(id);\n\n            _this.hide();\n          }\n        }, {\n          title: '',\n          // Button title\n          default: true,\n          // Will be triggered by default if 'Enter' pressed.\n          handler: function handler() {} // Button click handler\n\n        }, {\n          title: 'Close'\n        }]\n      });\n    },\n    hide: function hide() {\n      this.$modal.hide('dialog');\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>List of Customers</h1>\r\n    <p class=\"error\" v-if=\"error\">{{ error }}</p>\r\n    <div class=\"posts-container\">\r\n      <div class=\"divTable blueTable\">\r\n        <div class=\"divTableHeading\">\r\n          <div class=\"divTableRow\">\r\n            <div class=\"divTableHead\"></div>\r\n            <div class=\"divTableHead\"></div>\r\n            <div class=\"divTableHead\">ID</div>\r\n            <div class=\"divTableHead\">Wedding Date</div>\r\n            <div class=\"divTableHead\">Wedinng Location</div>\r\n            <div class=\"divTableHead\">Bride Name</div>\r\n            <div class=\"divTableHead\">Groom Name</div>\r\n            <div class=\"divTableHead\">Contact Date</div>\r\n            <div class=\"divTableHead\">Contract Date</div>\r\n            <div class=\"divTableHead\">Hours</div>\r\n            <div class=\"divTableHead\">Services</div>\r\n            <div class=\"divTableHead\">Total Price</div>\r\n            <div class=\"divTableHead\">Deposit</div>\r\n            <div class=\"divTableHead\">Public Permit</div>\r\n            <div class=\"divTableHead\">Source</div>\r\n          </div>\r\n        </div>\r\n      <div class=\"divTableBody post\"\r\n        v-for=\"(post, index) in posts\"\r\n        v-bind:item=\"post\"\r\n        v-bind:index=\"index\"\r\n        v-bind:key=\"post._id\"\r\n        v-on:dblclick=\"viewPost(post._id)\"\r\n      >\r\n        <v-dialog/>\r\n        <div class=\"divTableRow\"> \r\n          <div class=\"divTableCell\"><button class=\"btn\" v-on:click=\"show(post._id, post.ownID)\">Delete</button></div>         \r\n          <div class=\"divTableCell\"><button class=\"btn\" v-on:click=\"EditPost(post._id)\">Edit</button></div>         \r\n          <div class=\"divTableCell\">{{ post.ownID }}</div>\r\n          <div class=\"divTableCell\" v-if=\"moment(post.WeddingInfo.DateWedding, moment.ISO_8601, true).isValid()\">{{ moment(post.WeddingInfo.DateWedding).format('DD.MM.YYYY') }}</div>\r\n          <div class=\"divTableCell\" v-else>{{ post.WeddingInfo.DateWedding }}</div>\r\n          <div class=\"divTableCell\">{{ post.WeddingInfo.WeddingLocation}}</div>\r\n          <div class=\"divTableCell\">{{ post.BrideInfo.BrideName + ' ' +  post.BrideInfo.BrideSurname}}</div>\r\n          <div class=\"divTableCell\">{{ post.GroomInfo.GroomName + ' ' +  post.GroomInfo.GroomSurname}}</div>\r\n          <div class=\"divTableCell\" v-if=\"moment(post.DateContact, moment.ISO_8601, true).isValid()\">{{ moment(post.DateContact).format('DD.MM.YYYY') }}</div>\r\n          <div class=\"divTableCell\" v-else>{{ post.DateContact }}</div>\r\n          <div class=\"divTableCell\" v-if=\"moment(post.ContractInfo.ContractDate, moment.ISO_8601, true).isValid()\">{{ moment(post.ContractInfo.ContractDate).format('DD.MM.YYYY') }}</div>\r\n          <div class=\"divTableCell\" v-else>{{ post.ContractInfo.ContractDate }}</div>\r\n          <div class=\"divTableCell\">{{ post.ContractInfo.NumberHours}}</div>\r\n          <div class=\"divTableCell\">{{ post.ContractInfo.OrderedServices}}</div>\r\n          <div class=\"divTableCell\">{{ post.ContractInfo.TotalPrice}}€</div>\r\n          <div class=\"divTableCell\">{{ post.ContractInfo.DepositToPay}}€</div>\r\n          <div class=\"divTableCell\" v-if=\"post.ContractInfo.PermisionPublic\">Yes</div>\r\n          <div class=\"divTableCell\" v-else=\"post.ContractInfo.PermisionPublic\">No</div>\r\n          <div class=\"divTableCell\">{{ post.Source}}</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PostService from '../PostService'\r\nimport moment from 'moment'\r\n\r\n\r\nexport default {\r\n  name: 'Home',\r\n  template: `\r\n  \t<div>\r\n  \t\t<div>Execute only once '{{name}}', Not initialized again？？？</div>\r\n    \t<div>Current route '{{$route.params.name}}'</div>\r\n    </div>`,\r\n  data() {\r\n    return {\r\n      moment:moment,\r\n      name: this.$route.params.home,\r\n      posts: {\r\n        0: {\r\n          WeddingInfo:{\r\n          },\r\n          BrideInfo: {\r\n          },\r\n          GroomInfo: {\r\n          },\r\n          ContractInfo: {\r\n          }\r\n        }\r\n      },\r\n      posttoview: '',\r\n      error: '',\r\n      ownID: '',\r\n      bridename: '',\r\n      text: ''\r\n    }\r\n  },\r\n  async created() {\r\n    //this.id = this.$route.query.id;\r\n    //this.id2 = this.id;\r\n    try {\r\n      this.posts = await PostService.getPosts();\r\n      //console.log(this.posts);\r\n    } catch(err) {\r\n      this.error = err.message;\r\n    }\r\n  },\r\n  async mounted() {\r\n     try {\r\n      this.posts = await PostService.getPosts();\r\n    } catch(err) {\r\n      this.error = err.message;\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n        \r\n    async EditPost(id) {\r\n      this.$router.push(`Edit?id=${id}`);\r\n    },\r\n    async deletePost(id){\r\n      //console.log(\"ID: \", id);\r\n      await PostService.deletePost(id);\r\n      this.posts = await PostService.getPosts();\r\n      //this.hide();\r\n      //this.$router.push('\\/');\r\n    },\r\n    async createPost() {\r\n      await PostService.insertPost(this.bridename, this.text);\r\n      this.posts = await PostService.getPosts();\r\n    }/*,\r\n    async deletePost(id){\r\n      await PostService.deletePost(id);\r\n      this.posts = await PostService.getPosts();\r\n    }*/,\r\n    viewPost(id){      \r\n      this.$router.push(`ViewCostumer?id=${id}`);\r\n    },\r\n    show (id = '', ownID = '') {\r\n      //this.$modal.show('hello-world');\r\n      this.$modal.show('dialog', {\r\n        title: 'Delete Entry ' + ownID,\r\n        text: 'Are you sure you want to delete customer???',\r\n        buttons: [\r\n          {\r\n            title: 'Delete',\r\n            //handler: () => { alert('Woot!') }\r\n            handler: () => { \r\n                this.deletePost(id); \r\n                this.hide(); }\r\n          },\r\n          {\r\n            title: '',       // Button title\r\n            default: true,    // Will be triggered by default if 'Enter' pressed.\r\n            handler: () => {} // Button click handler\r\n          },\r\n          {\r\n            title: 'Close'\r\n          }\r\n      ]\r\n      })\r\n    },\r\n    hide () {\r\n      this.$modal.hide('dialog');\r\n    } \r\n\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .v--modal-overlay {\r\n    background-color: rgba(255, 0, 0, 1);\r\n  }\r\n\r\n  .btn{\r\n    display: inline-block;\r\n    border: none;\r\n    background: #555;\r\n    color: #fff;\r\n    padding: 7px 18px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn:hover{\r\n    background: #666;\r\n  }\r\n\r\n\r\n  div.container {\r\n    max-width: 95%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  p.error {\r\n    border: 1px solid #ff5b5f;\r\n    background-color: #aaa5ee;\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  div.post {\r\n    position: relative;\r\n    border: 1px solid #5bd658;\r\n    padding: 0px 10px 0px 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n\r\n  p.text {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  div.blueTable {\r\n  width: 100%;\r\n  text-align: left;\r\n  border-bottom: 1px solid rgb(194, 194, 194);\r\n}\r\n\r\n.divTable.blueTable .divTableCell, .divTable.blueTable .divTableHead {\r\n  padding: 10px 5px;\r\n  border-bottom: 1px solid rgb(194, 194, 194);\r\n}\r\n.divTable.blueTable .divTableBody .divTableCell {\r\n  font-size: 13px;\r\n}\r\n.divTable.blueTable .divTableRow:nth-child(even) {\r\n  /*background: #D0E4F5;*/\r\n}\r\n\r\n.divTable.blueTable .divTableHeading {\r\n  background: #cccccc;\r\n  /*\r\n  background: -moz-linear-gradient(top, #949494 0%, #7e7e7e 66%, #707070 100%);\r\n  background: -webkit-linear-gradient(top, #949494 0%, #7e7e7e 66%, #707070 100%);\r\n  background: linear-gradient(to bottom, #949494 0%, #7e7e7e 66%, #707070 100%);\r\n  border-bottom: 2px solid #444444;\r\n  */\r\n}\r\n\r\n.divTable.blueTable .divTableHeading .divTableHead {\r\n  font-size: 15px;\r\n  /*font-weight: bold;*/\r\n  color: rgb(131, 131, 131);\r\n  border-left: 2px solid rgb(212, 212, 212);\r\n}\r\n\r\n.divTable.blueTable .divTableHeading .divTableHead:first-child {\r\n  /*border-left: none;*/\r\n}\r\n\r\n.blueTable .tableFootStyle {\r\n  /*\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  color: #FFFFFF;\r\n  background: #D0E4F5;\r\n  background: -moz-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);\r\n  background: -webkit-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);\r\n  background: linear-gradient(to bottom, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);\r\n  border-top: 2px solid #444444;\r\n  */\r\n}\r\n.blueTable .tableFootStyle {\r\n  font-size: 14px;\r\n}\r\n.blueTable .tableFootStyle .links {\r\n\t text-align: right;\r\n}\r\n.blueTable .tableFootStyle .links a{\r\n  display: inline-block;\r\n  background: #1C6EA4;\r\n  color: #FFFFFF;\r\n  padding: 2px 8px;\r\n  border-radius: 5px;\r\n}\r\n.blueTable.outerTableFooter {\r\n  border-top: none;\r\n}\r\n.blueTable.outerTableFooter .tableFootStyle {\r\n  padding: 3px 5px; \r\n}\r\n\r\n/* DivTable.com */\r\n.divTable{ display: table; }\r\n.divTableRow { display: table-row; }\r\n.divTableCell, .divTableHead { display: table-cell;}\r\n.divTableHeading { display: table-header-group;}\r\n.divTableFoot { display: table-footer-group;}\r\n.divTableBody { display: table-row-group;}\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}