{"remainingRequest":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js!/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/YouTube_Full-Stack/client/src/views/InsertInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/YouTube_Full-Stack/client/src/views/InsertInfo.vue","mtime":1551378056719},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PostService from '../PostService';\nimport DatePicker from 'vue2-datepicker';\nexport default {\n  name: 'New',\n  components: {\n    DatePicker: DatePicker //Home\n\n  },\n  data: function data() {\n    return {\n      //contractVisible: false,\n      posts: {\n        0: {\n          ActivCustomer: true,\n          AlreadyCustomer: false,\n          EventInfo: {},\n          BrideInfo: {},\n          GroomInfo: {},\n          ContractInfo: {}\n        }\n      },\n      post2: {\n        0: {}\n      },\n      error: '',\n      // custom lang\n      lang: 'en' // custom range shortcuts\n\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this.$route.query.id) {\n                this.id = this.$route.query.id;\n              } else {\n                this.$router.push(\"/\");\n              }\n\n              if (!this.id) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return PostService.getPosts(this.id);\n\n            case 5:\n              this.posts = _context.sent;\n              this.post2[0].id = this.id;\n              this.post2[0].ownID = this.posts[0].ownID; //this.post2.id = 'asdfasdf';\n\n              console.log(this.post2);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              this.error = _context.t0.message;\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 11]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    createPost: function () {\n      var _createPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = '';\n                _context2.next = 3;\n                return PostService.insertPost('insertinfo', this.post2);\n\n              case 3:\n                data = _context2.sent;\n                this.$router.push(\"ViewCostumer?id=\".concat(this.id));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createPost() {\n        return _createPost.apply(this, arguments);\n      }\n\n      return createPost;\n    }()\n  }\n};",{"version":3,"sources":["InsertInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,WAAA,MAAA,gBAAA;AACA,OAAA,UAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA,CAEA;;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA;AACA,MAAA,KAAA,EAAA;AACA,WAAA;AACA,UAAA,aAAA,EAAA,IADA;AAEA,UAAA,eAAA,EAAA,KAFA;AAGA,UAAA,SAAA,EAAA,EAHA;AAKA,UAAA,SAAA,EAAA,EALA;AAOA,UAAA,SAAA,EAAA,EAPA;AASA,UAAA,YAAA,EAAA;AATA;AADA,OAFA;AAgBA,MAAA,KAAA,EAAA;AACA,WAAA;AADA,OAhBA;AAoBA,MAAA,KAAA,EAAA,EApBA;AAqBA;AACA,MAAA,IAAA,EAAA,IAtBA,CAuBA;;AAvBA,KAAA;AA2BA,GAlCA;AAmCA,EAAA,OAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA,kBAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA,EAAA;AACA,qBAAA,EAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA;AACA,eAFA,MAEA;AACA,qBAAA,OAAA,CAAA,IAAA;AACA;;AAxCA,mBA0CA,KAAA,EA1CA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBA4CA,WAAA,CAAA,QAAA,CAAA,KAAA,EAAA,CA5CA;;AAAA;AA4CA,mBAAA,KA5CA;AA6CA,mBAAA,KAAA,CAAA,CAAA,EAAA,EAAA,GAAA,KAAA,EAAA;AACA,mBAAA,KAAA,CAAA,CAAA,EAAA,KAAA,GAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CA9CA,CA+CA;;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AAhDA;AAAA;;AAAA;AAAA;AAAA;AAkDA,mBAAA,KAAA,GAAA,YAAA,OAAA;;AAlDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuDA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,IAFA,GAEA,EAFA;AAAA;AAAA,uBAIA,WAAA,CAAA,UAAA,CACA,YADA,EAEA,KAAA,KAFA,CAJA;;AAAA;AAIA,gBAAA,IAJA;AASA,qBAAA,OAAA,CAAA,IAAA,2BAAA,KAAA,EAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAvDA,CAAA","sourcesContent":["<template>\r\n\r\n  <div class=\"container\">\r\n    <h1>New contact Info to event</h1>\r\n    <div class=\"create-post\">  \r\n\r\n        <h2>ID:  {{ post2[0].ownID }}</h2> \r\n\r\n        <label>Event Date: </label> <strong>{{ moment(posts[0].EventInfo.DateWedding).format('DD.MM.YYYY') }}</strong>\r\n        <br><br>\r\n        <label>Who: </label>  <input type=\"text\" v-model=\"post2[0].ContactPerson\" placeholder=\"Name\">\r\n        <br>     \r\n        <label>Info Date</label><br>\r\n        <date-picker v-model=\"post2[0].DateInfo\" type='datetime' value-type='date' :first-day-of-week=\"1\" :lang=\"lang\" placeholder=\"Introduce the communication Date\"></date-picker>\r\n        <br><br>\r\n        <label>Text, Comment, Email</label><br>\r\n        <textarea name=\"comment\" form=\"usrform\"  v-model=\"post2[0].CommentsInfo\" placeholder=\"Here some coments\">Enter text here...</textarea>\r\n\r\n        <button class=\"btn\" v-on:click=\"createPost\">Post!</button>\r\n\r\n    </div>\r\n    <p class=\"error\" v-if=\"error\">{{ error }}</p>\r\n\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport PostService from '../PostService'\r\nimport DatePicker from 'vue2-datepicker'\r\n\r\nexport default {\r\n  name: 'New',\r\n  components: { \r\n    DatePicker\r\n    //Home\r\n  },\r\n  data() {\r\n    return {\r\n      //contractVisible: false,\r\n      posts: {\r\n        0: {\r\n          ActivCustomer:true,\r\n          AlreadyCustomer: false,\r\n          EventInfo:{\r\n          },\r\n          BrideInfo: {\r\n          },\r\n          GroomInfo: {\r\n          },\r\n          ContractInfo: {\r\n          }\r\n        }\r\n      },\r\n       post2: {\r\n        0: {\r\n        }\r\n       },\r\n      error: '',    \r\n      // custom lang\r\n      lang: 'en'\r\n      // custom range shortcuts\r\n\r\n\r\n    }\r\n  },\r\n  async created() {\r\n    if(this.$route.query.id){\r\n        this.id = this.$route.query.id;\r\n    } else {\r\n        this.$router.push(`/`);\r\n    }  \r\n    \r\n    if(this.id){\r\n        try {\r\n            this.posts = await PostService.getPosts(this.id);\r\n            this.post2[0].id = this.id;\r\n            this.post2[0].ownID = this.posts[0].ownID;\r\n            //this.post2.id = 'asdfasdf';\r\n            console.log(this.post2);\r\n        } catch(err) {\r\n            this.error = err.message;\r\n        }\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    async createPost() {\r\n        let data = '';\r\n        \r\n        data = await PostService.insertPost(\r\n            'insertinfo',\r\n            this.post2\r\n        );\r\n\r\n        this.$router.push(`ViewCostumer?id=${this.id}`);\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 1s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n div.create-post {\r\n   text-align: left;\r\n   /*max-width: 900px;*/\r\n   margin-left: auto;\r\n   margin-right: auto;   \r\n }\r\n\r\n  div.create-post input{\r\n  /*div.create-post {*/\r\n    /*float: left;*/\r\n    width: 95%;\r\n    height: 25px;\r\n    margin: 5px 0 20px 0;\r\n    padding:5px;\r\n    border: 1px solid #ff8c8c;\r\n    background-color: #f7f7f7;\r\n    color: #6e6e6e;\r\n    font-size: 16px;\r\n     \r\n  }\r\n\r\n    div.create-post textarea{\r\n  /*div.create-post {*/\r\n    /*float: left;*/\r\n    width: 95%;\r\n    height: 150px;\r\n    margin: 5px 0 20px 0;\r\n    padding:5px;\r\n    border: 1px solid #ff8c8c;\r\n    background-color: #f7f7f7;\r\n    color: #6e6e6e;\r\n    font-size: 16px;\r\n     \r\n  }\r\n\r\n  div.create-post date-picker{\r\n    width: 95%;\r\n    height: 150px;\r\n    margin: 5px 0 20px 0;\r\n    padding:5px;\r\n    border: 1px solid #ff8c8c;\r\n    background-color: #f7f7f7;\r\n    color: #6e6e6e;\r\n    font-size: 16px;\r\n     \r\n  }\r\n\r\n/* Create a custom checkbox */\r\ndiv.create-post .checkbox {\r\n  /*position: absolute;*/  \r\n  /*top: 0;\r\n  left: 0;*/\r\n  height: 15px;\r\n  width: 15px;\r\n  margin-left: 15px;\r\n  /*background-color: #eee;*/\r\n}\r\n\r\n/* Create a custom radio buttom */\r\ndiv.create-post .radio{\r\n  /*position: absolute;*/  \r\n  /*top: 0;\r\n  left: 0;*/\r\n  height: 0px;\r\n  width: 25px;\r\n  margin-right: 25px;\r\n  /*background-color: #eee;*/\r\n}\r\n\r\n  div.create-post input::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n  color: rgb(192, 192, 192);\r\n  opacity: 1; /* Firefox */\r\n}\r\n\r\n  div.create-post textarea::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n  color: rgb(192, 192, 192);\r\n  opacity: 1; /* Firefox */\r\n}\r\n\r\n  div.create-post label {\r\n    color: #919191;\r\n    font-size: 18px;\r\n\r\n  }\r\n\r\n  div.container {\r\n    max-width: 1000px;\r\n    margin: 0 auto auto 50px;\r\n  }\r\n\r\n  p.error {\r\n    border: 1px solid #ff5b5f;\r\n    background-color: #aaa5ee;\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .btn{\r\n    display: inline-block;\r\n    border: none;\r\n    background: #555;\r\n    color: #fff;\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn:hover{\r\n    background: #666;\r\n  }\r\n\r\n\r\n  .barbtn{\r\n    width: 100%;\r\n    height: 25px;\r\n    margin: 0px 0 0px 0;\r\n    padding:10px;\r\n    display: inline-block;\r\n    border: none;\r\n    background: rgb(148, 67, 67);\r\n    color: #fff;\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .barbtn:hover{\r\n    background: rgb(190, 106, 106);\r\n  }\r\n\r\n\r\n.subFields{\r\n  margin: 10px 0 10px 25px;\r\n}\r\n\r\ndiv.subFields label{\r\n  font-size: 16px;\r\n  color: #0a009b\r\n}\r\n\r\n\r\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\r\n@media screen and (max-width: 600px) {\r\n  .divTableHead, .divTableCell, .create-post input[type=submit] {\r\n    width: 100%;\r\n    margin-top: 0;\r\n  }\r\n}\r\n\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}