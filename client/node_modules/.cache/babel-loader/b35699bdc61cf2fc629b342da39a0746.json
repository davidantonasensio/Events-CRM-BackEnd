{"remainingRequest":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js!/home/david/YouTube_Full-Stack/client/node_modules/eslint-loader/index.js??ref--13-0!/home/david/YouTube_Full-Stack/client/src/PostService.js","dependencies":[{"path":"/home/david/YouTube_Full-Stack/client/src/PostService.js","mtime":1549549551519},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios'; //const url ='http://localhost:5000/api/posts/';\n\nvar url = 'http://192.168.2.65:5000/api/posts/';\n\nvar PostService =\n/*#__PURE__*/\nfunction () {\n  function PostService() {\n    _classCallCheck(this, PostService);\n  }\n\n  _createClass(PostService, null, [{\n    key: \"getPosts\",\n    // Get Post\n    value: function getPosts() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var url2 = url;\n      var cambio = false;\n\n      if (id) {\n        url2 = url + id;\n        cambio = true;\n      } else if (cambio) {\n        url2 = url;\n      } //console.log(id);\n      //console.log('Get Post: ', url2);\n\n\n      return new _Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resolve, reject) {\n          var res, data;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return axios.get(url2);\n\n                case 3:\n                  res = _context.sent;\n                  data = res.data; //console.log(data);\n\n                  resolve(data.map(function (post) {\n                    return _objectSpread({}, post, {\n                      createdAt: new Date(post.createdAt)\n                    });\n                  }));\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  //console.log('EEEEEEEEEEE');\n                  //console.log(err);\n                  reject(_context.t0);\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 8]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } // Insert Post\n\n  }, {\n    key: \"insertPost\",\n    value: function insertPost(post) {\n      return axios.post(url, {\n        post: post\n      }).then(function (response) {\n        //callback(response.data.message);\n        return response.data;\n      }).catch(function (err) {\n        return err;\n      });\n    } // Update Post\n\n  }, {\n    key: \"updatePost\",\n    value: function updatePost(post) {\n      var url3 = url + 'update';\n      return axios.post(url3, {\n        post: post\n      }).then(function (response) {\n        //callback(response.data.message);\n        return response.data;\n      }).catch(function (err) {\n        return err;\n      });\n    } // Delete Post\n\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(id) {\n      console.log(\"en clase: \", id);\n      return axios.delete(\"\".concat(url).concat(id));\n    }\n  }]);\n\n  return PostService;\n}();\n\nexport default PostService;",{"version":3,"sources":["/home/david/YouTube_Full-Stack/client/src/PostService.js"],"names":["axios","url","PostService","id","url2","cambio","resolve","reject","get","res","data","map","post","createdAt","Date","then","response","catch","err","url3","console","log","delete"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAIC,GAAG,GAAE,qCAAT;;IAGMC,W;;;;;;;;;AAEF;+BACyB;AAAA,UAATC,EAAS,uEAAN,KAAM;AACrB,UAAIC,IAAI,GAAGH,GAAX;AACA,UAAII,MAAM,GAAG,KAAb;;AAEA,UAAGF,EAAH,EAAM;AACFC,QAAAA,IAAI,GAAGH,GAAG,GAAGE,EAAb;AACAE,QAAAA,MAAM,GAAG,IAAT;AACH,OAHD,MAGM,IAAGA,MAAH,EAAU;AACZD,QAAAA,IAAI,GAAGH,GAAP;AACH,OAToB,CAUrB;AACA;;;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,iBAAOK,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAGOP,KAAK,CAACQ,GAAN,CAAUJ,IAAV,CAHP;;AAAA;AAGLK,kBAAAA,GAHK;AAILC,kBAAAA,IAJK,GAIED,GAAG,CAACC,IAJN,EAKX;;AAEAJ,kBAAAA,OAAO,CACHI,IAAI,CAACC,GAAL,CAAS,UAAAC,IAAI;AAAA,6CACNA,IADM;AAETC,sBAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASF,IAAI,CAACC,SAAd;AAFF;AAAA,mBAAb,CADG,CAAP;AAPW;AAAA;;AAAA;AAAA;AAAA;AAgBX;AACA;AACAN,kBAAAA,MAAM,aAAN;;AAlBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAqBH,K,CAGD;;;;+BAEQK,I,EACH;AACD,aAAOZ,KAAK,CAACY,IAAN,CAAWX,GAAX,EAAe;AAClBW,QAAAA,IAAI,EAAJA;AADkB,OAAf,EAEJG,IAFI,CAEC,UAAAC,QAAQ,EAAG;AACf;AACA,eAAOA,QAAQ,CAACN,IAAhB;AACD,OALI,EAKFO,KALE,CAKI,UAAAC,GAAG,EAAG;AACb,eAAOA,GAAP;AACD,OAPI,CAAP;AAQH,K,CAGD;;;;+BAEIN,I,EACH;AACD,UAAIO,IAAI,GAAGlB,GAAG,GAAG,QAAjB;AAEA,aAAOD,KAAK,CAACY,IAAN,CAAWO,IAAX,EAAgB;AACnBP,QAAAA,IAAI,EAAJA;AADmB,OAAhB,EAEJG,IAFI,CAEC,UAAAC,QAAQ,EAAG;AACf;AACA,eAAOA,QAAQ,CAACN,IAAhB;AACD,OALI,EAKFO,KALE,CAKI,UAAAC,GAAG,EAAG;AACb,eAAOA,GAAP;AACD,OAPI,CAAP;AASH,K,CAEG;;;;+BACkBf,E,EAAI;AAClBiB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BlB,EAA1B;AACA,aAAOH,KAAK,CAACsB,MAAN,WAAgBrB,GAAhB,SAAsBE,EAAtB,EAAP;AACH;;;;;;AAGL,eAAeD,WAAf","sourcesContent":["import axios from 'axios'\r\n\r\n//const url ='http://localhost:5000/api/posts/';\r\nlet url ='http://192.168.2.65:5000/api/posts/';\r\n\r\n\r\nclass PostService{\r\n\r\n    // Get Post\r\n    static getPosts(id=false){\r\n        let url2 = url;  \r\n        let cambio = false;\r\n\r\n        if(id){\r\n            url2 = url + id;\r\n            cambio = true;\r\n        }else if(cambio){\r\n            url2 = url;\r\n        }\r\n        //console.log(id);\r\n        //console.log('Get Post: ', url2);\r\n        return new Promise(async (resolve, reject)=> {\r\n            try{\r\n                //console.log(id);\r\n                const res = await axios.get(url2);                \r\n                const data = res.data;\r\n                //console.log(data);\r\n\r\n                resolve(\r\n                    data.map(post =>({\r\n                        ...post,\r\n                        createdAt: new Date(post.createdAt)\r\n                    })) \r\n                )\r\n                \r\n            }   \r\n                catch(err){\r\n                //console.log('EEEEEEEEEEE');\r\n                //console.log(err);\r\n                reject(err);\r\n            }\r\n        }) \r\n    }\r\n\r\n\r\n    // Insert Post\r\n    static insertPost(\r\n            post\r\n        ){\r\n        return axios.post(url,{\r\n            post\r\n        }).then(response =>{\r\n            //callback(response.data.message);\r\n            return response.data;\r\n          }).catch(err =>{\r\n            return err;\r\n          });\r\n    }\r\n\r\n\r\n    // Update Post\r\n    static updatePost(\r\n        post\r\n    ){\r\n    let url3 = url + 'update';\r\n    \r\n    return axios.post(url3,{\r\n        post\r\n    }).then(response =>{\r\n        //callback(response.data.message);\r\n        return response.data;\r\n      }).catch(err =>{\r\n        return err;\r\n      });\r\n      \r\n}\r\n\r\n    // Delete Post\r\n    static deletePost(id) {\r\n        console.log(\"en clase: \", id);\r\n        return axios.delete(`${url}${id}`);\r\n    }\r\n}\r\n\r\nexport default PostService;"]}]}