{"remainingRequest":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js!/home/david/YouTube_Full-Stack/client/node_modules/eslint-loader/index.js??ref--13-0!/home/david/YouTube_Full-Stack/client/src/PostService.js","dependencies":[{"path":"/home/david/YouTube_Full-Stack/client/src/PostService.js","mtime":1550836042893},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/david/YouTube_Full-Stack/client/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios'; //const url ='http://localhost:5000/api/posts/';\n\nvar url = 'http://192.168.2.65:5000/api/posts/';\n\nvar PostService =\n/*#__PURE__*/\nfunction () {\n  function PostService() {\n    _classCallCheck(this, PostService);\n  }\n\n  _createClass(PostService, null, [{\n    key: \"getPosts\",\n    // Get Post\n    value: function getPosts() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var activ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var customer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var Years = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n      //let url2 = url;  \n      //let cambio = false;\n      //let data='';\n      //let customera='';\n      return new _Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resolve, reject) {\n          var lenghtYearsArray, res, data;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  lenghtYearsArray = Years.length;\n                  _context.next = 4;\n                  return axios.get(url, {\n                    params: {\n                      id: id,\n                      activ: activ,\n                      customer: customer,\n                      Years: Years\n                    }\n                  });\n\n                case 4:\n                  res = _context.sent;\n                  data = res.data; //console.log('DATA: ', data)           \n\n                  resolve(data.map(function (post) {\n                    return _objectSpread({}, post);\n                  }));\n                  _context.next = 12;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](0);\n                  reject(_context.t0);\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 9]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } // Insert Post\n\n  }, {\n    key: \"insertPost\",\n    value: function insertPost(post) {\n      console.log(post);\n      return axios.post(url, {\n        post: post\n      }).then(function (response) {\n        return response.data;\n      }).catch(function (err) {\n        return err;\n      });\n    } // Update Post\n\n  }, {\n    key: \"updatePost\",\n    value: function updatePost(post) {\n      var url3 = url + 'update'; //console.log(\"post: \", post);   \n\n      return axios.post(url3, {\n        post: post\n      }).then(function (response) {\n        return response.data;\n      }).catch(function (err) {\n        return err;\n      });\n    } // Delete Post\n\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(id) {\n      console.log(\"en clase: \", id);\n      return axios.delete(\"\".concat(url).concat(id));\n    }\n  }]);\n\n  return PostService;\n}();\n\nexport default PostService;",{"version":3,"sources":["/home/david/YouTube_Full-Stack/client/src/PostService.js"],"names":["axios","url","PostService","id","activ","customer","Years","resolve","reject","lenghtYearsArray","length","get","params","res","data","map","post","console","log","then","response","catch","err","url3","delete"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAIC,GAAG,GAAE,qCAAT;;IAGMC,W;;;;;;;;;AAEF;+BACgE;AAAA,UAAhDC,EAAgD,uEAA7C,KAA6C;AAAA,UAAtCC,KAAsC,uEAAhC,KAAgC;AAAA,UAAzBC,QAAyB,uEAAhB,KAAgB;AAAA,UAATC,KAAS,uEAAH,EAAG;AAC5D;AACA;AACA;AACA;AAEA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEPC,kBAAAA,gBAFO,GAEYH,KAAK,CAACI,MAFlB;AAAA;AAAA,yBAGOV,KAAK,CAACW,GAAN,CAAUV,GAAV,EAAe;AAC7BW,oBAAAA,MAAM,EAAE;AACJT,sBAAAA,EAAE,EAAEA,EADA;AAEJC,sBAAAA,KAAK,EAAEA,KAFH;AAGJC,sBAAAA,QAAQ,EAAEA,QAHN;AAIJC,sBAAAA,KAAK,EAALA;AAJI;AADqB,mBAAf,CAHP;;AAAA;AAGLO,kBAAAA,GAHK;AAaLC,kBAAAA,IAbK,GAaED,GAAG,CAACC,IAbN,EAcX;;AACAP,kBAAAA,OAAO,CACHO,IAAI,CAACC,GAAL,CAAS,UAAAC,IAAI;AAAA,6CACNA,IADM;AAAA,mBAAb,CADG,CAAP;AAfW;AAAA;;AAAA;AAAA;AAAA;AAsBXR,kBAAAA,MAAM,aAAN;;AAtBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AA2BH,K,CAGD;;;;+BAEQQ,I,EACH;AACGC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACJ,aAAOhB,KAAK,CAACgB,IAAN,CAAWf,GAAX,EAAe;AAClBe,QAAAA,IAAI,EAAJA;AADkB,OAAf,EAEJG,IAFI,CAEC,UAAAC,QAAQ,EAAG;AACf,eAAOA,QAAQ,CAACN,IAAhB;AACD,OAJI,EAIFO,KAJE,CAII,UAAAC,GAAG,EAAG;AACb,eAAOA,GAAP;AACD,OANI,CAAP;AAOH,K,CAGD;;;;+BACkBN,I,EAAK;AACvB,UAAIO,IAAI,GAAGtB,GAAG,GAAG,QAAjB,CADuB,CAEvB;;AAEA,aAAOD,KAAK,CAACgB,IAAN,CAAWO,IAAX,EAAgB;AACnBP,QAAAA,IAAI,EAAJA;AADmB,OAAhB,EAEJG,IAFI,CAEC,UAAAC,QAAQ,EAAG;AACf,eAAOA,QAAQ,CAACN,IAAhB;AACD,OAJI,EAIFO,KAJE,CAII,UAAAC,GAAG,EAAG;AACb,eAAOA,GAAP;AACD,OANI,CAAP;AAQH,K,CAEG;;;;+BACkBnB,E,EAAI;AAClBc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bf,EAA1B;AACA,aAAOH,KAAK,CAACwB,MAAN,WAAgBvB,GAAhB,SAAsBE,EAAtB,EAAP;AACH;;;;;;AAGL,eAAeD,WAAf","sourcesContent":["import axios from 'axios'\r\n\r\n//const url ='http://localhost:5000/api/posts/';\r\nlet url ='http://192.168.2.65:5000/api/posts/';\r\n\r\n\r\nclass PostService{\r\n\r\n    // Get Post\r\n    static getPosts(id=false, activ=false, customer=false, Years=[]){\r\n        //let url2 = url;  \r\n        //let cambio = false;\r\n        //let data='';\r\n        //let customera='';\r\n        \r\n        return new Promise(async (resolve, reject)=> {\r\n            try{\r\n                let lenghtYearsArray = Years.length;\r\n                const res = await axios.get(url, {\r\n                    params: {\r\n                        id: id,\r\n                        activ: activ,\r\n                        customer: customer,\r\n                        Years\r\n                    }\r\n                })\r\n                \r\n                               \r\n                const data = res.data;\r\n                //console.log('DATA: ', data)           \r\n                resolve(\r\n                    data.map(post =>({\r\n                        ...post\r\n                    })) \r\n                )                \r\n            }   \r\n                catch(err){\r\n                reject(err);\r\n            }\r\n        }) \r\n        \r\n        \r\n    }\r\n\r\n\r\n    // Insert Post\r\n    static insertPost(\r\n            post\r\n        ){\r\n            console.log(post);\r\n        return axios.post(url,{\r\n            post\r\n        }).then(response =>{\r\n            return response.data;\r\n          }).catch(err =>{\r\n            return err;\r\n          });\r\n    }\r\n\r\n\r\n    // Update Post\r\n    static updatePost(post){\r\n    let url3 = url + 'update';\r\n    //console.log(\"post: \", post);   \r\n\r\n    return axios.post(url3,{\r\n        post\r\n    }).then(response =>{\r\n        return response.data;\r\n      }).catch(err =>{\r\n        return err;\r\n      });\r\n     \r\n}\r\n\r\n    // Delete Post\r\n    static deletePost(id) {\r\n        console.log(\"en clase: \", id);\r\n        return axios.delete(`${url}${id}`);\r\n    }\r\n}\r\n\r\nexport default PostService;"]}]}