{"remainingRequest":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/YouTube_Full-Stack/client/src/views/View.vue?vue&type=style&index=0&id=3261d942&scoped=true&lang=css&","dependencies":[{"path":"/home/david/YouTube_Full-Stack/client/src/views/View.vue","mtime":1548955925372},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n div.create-post {\n   text-align: left;\n   /*max-width: 900px;*/\n   margin-left: auto;\n   margin-right: auto;   \n }\n\n\n  div.create-post label {\n    color: #919191;\n    font-size: 18px;\n\n  }\n\n  div.container {\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  p.error {\n    border: 1px solid #ff5b5f;\n    background-color: #aaa5ee;\n    padding: 10px;\n    margin-bottom: 15px;\n  }\n\n  .btn{\n    display: inline-block;\n    border: none;\n    background: #555;\n    color: #fff;\n    padding: 7px 20px;\n    cursor: pointer;\n  }\n\n  .btn:hover{\n    background: #666;\n  }\n\n\n\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n  .divTableHead, .divTableCell, .create-post input[type=submit] {\n    width: 100%;\n    margin-top: 0;\n  }\n}\n\n\n",{"version":3,"sources":["View.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA","file":"View.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n\r\n  <div class=\"container\" v-if=\"!error\">\r\n    <h1>ID:  {{ posts[0].ownID }}</h1>\r\n    <div class=\"create-post\">  \r\n\r\n\r\n<ul>\r\n      <li><label>Already Customer: </label> <span v-if=\"posts[0].AlreadyCustomer\"><strong>Yes</strong></span><span v-else><strong>No</strong></span></li>\r\n      <li><label>Contact Date: </label> <strong>{{ posts[0].DateContact }}</strong></li>\r\n      <li><label>Source: </label> <strong>{{ posts[0].Source }}</strong></li>\r\n      <h2>Wedding Info</h2>      \r\n            <ul>\r\n                <li><label>Date Wedding: </label> <strong>{{ posts[0].WeddingInfo.DateWedding }}</strong></li>\r\n                <li><label>Wedding Location: </label> <strong>{{ posts[0].WeddingInfo.WeddingLocation }}</strong></li>\r\n            </ul>\r\n      <h2>Bride Info</h2>      \r\n            <ul>\r\n                <li><label>Bride Name: </label> <strong>{{ posts[0].BrideInfo.BrideName }} {{ posts[0].BrideInfo.BrideSurname }}</strong></li>\r\n                <li><label>Bride Telefon Number: </label> <strong>{{ posts[0].BrideInfo.BrideTel }}</strong></li>\r\n                <li><label>Bride EMail: </label> <strong>{{ posts[0].BrideInfo.BrideEmail }}</strong></li>\r\n            </ul>\r\n\r\n      <h2>Groom Info</h2>      \r\n            <ul>\r\n                <li><label>Groom Name: </label> <strong>{{ posts[0].GroomInfo.GroomName }} {{ posts[0].GroomInfo.GroomSurname }}</strong></li>\r\n                <li><label>Groom Telefon Number: </label> <strong>{{ posts[0].GroomInfo.GroomTel }}</strong></li>\r\n                <li><label>Groom EMail: </label> <strong>{{ posts[0].GroomInfo.GroomEmail }}</strong></li>\r\n            </ul>            \r\n        <br>\r\n\r\n      <li><label>Couple Address: </label> <strong>{{ posts[0].CoupleAddress }}</strong></li>\r\n\r\n      <h2>Contract Info</h2>      \r\n            <ul>\r\n                <li><label>Contract Date: </label> <strong>{{ posts[0].ContractInfo.ContractDate }}</strong></li>\r\n                <li><label>Ordered Services: </label> <strong>{{ posts[0].ContractInfo.OrderedServices }}</strong></li>\r\n                <li><label>Ordered Products: </label> <strong>{{ posts[0].ContractInfo.OrderedProducts }}</strong></li>\r\n                <li><label>Number of Hours: </label> <strong>{{ posts[0].ContractInfo.NumberHours }}</strong></li>\r\n                <li><label>Total Price: </label> <strong>{{ posts[0].ContractInfo.TotalPrice }}</strong></li>\r\n                <li><label>Deposit to Pay: </label> <strong>{{ posts[0].ContractInfo.DepositToPay }}</strong></li>\r\n                <li><label>Deposit already Payed?: </label> <strong>{{ posts[0].ContractInfo.DepositPayed }}</strong></li>\r\n                <li><label>Permision to public Fotos: </label> <strong>{{ posts[0].ContractInfo.PermisionPublic }}</strong></li>\r\n                \r\n            </ul>  \r\n        <br>\r\n\r\n      <li><label>Text, Comment: </label> <strong>{{ posts[0].Comments }}</strong></li>\r\n\r\n</ul>   \r\n<br><br>\r\n\r\n      <button class=\"btn\" v-on:click=\"EditPost\">Edit</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container\" v-else>\r\n    There is a error\r\n</div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport PostService from '../PostService'\r\n\r\nexport default {\r\n  name: 'View',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      error: '',\r\n      id: ''\r\n      \r\n    }\r\n  },\r\n  \r\n  async created() {\r\n      this.id = this.$route.query.id;\r\n\r\n    try {\r\n      this.posts = await PostService.getPosts(this.id);      \r\n    } catch(err) {\r\n      this.error = err.message;\r\n      //console.log('ZZZZZZZZ');\r\n      //console.log(this.error);\r\n    }    \r\n  },\r\n  \r\n  methods: {\r\n    async EditPost(id) {\r\n      console.log(\"AAAAAAAAA\");\r\n      this.$router.push(`New?id=${id}`);\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n div.create-post {\r\n   text-align: left;\r\n   /*max-width: 900px;*/\r\n   margin-left: auto;\r\n   margin-right: auto;   \r\n }\r\n\r\n\r\n  div.create-post label {\r\n    color: #919191;\r\n    font-size: 18px;\r\n\r\n  }\r\n\r\n  div.container {\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  p.error {\r\n    border: 1px solid #ff5b5f;\r\n    background-color: #aaa5ee;\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .btn{\r\n    display: inline-block;\r\n    border: none;\r\n    background: #555;\r\n    color: #fff;\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn:hover{\r\n    background: #666;\r\n  }\r\n\r\n\r\n\r\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\r\n@media screen and (max-width: 600px) {\r\n  .divTableHead, .divTableCell, .create-post input[type=submit] {\r\n    width: 100%;\r\n    margin-top: 0;\r\n  }\r\n}\r\n\r\n\r\n</style>\r\n"]}]}