{"remainingRequest":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/YouTube_Full-Stack/client/src/views/InsertInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/YouTube_Full-Stack/client/src/views/InsertInfo.vue","mtime":1551891532381},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/YouTube_Full-Stack/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport PostService from '../PostService'\r\nimport DatePicker from 'vue2-datepicker'\r\n\r\nexport default {\r\n  name: 'New',\r\n  components: { \r\n    DatePicker\r\n    //Home\r\n  },\r\n  data() {\r\n    return {\r\n      //contractVisible: false,\r\n      posts: {\r\n        0: {\r\n          ActivCustomer:true,\r\n          AlreadyCustomer: false,\r\n          EventInfo:{\r\n          },\r\n          BrideInfo: {\r\n          },\r\n          GroomInfo: {\r\n          },\r\n          ContractInfo: {\r\n          }\r\n        }\r\n      },\r\n       post2: {\r\n        0: {\r\n          DateInfo: new Date(),\r\n          ChanelChoosed: 'Email',\r\n          ownID: ''\r\n        }\r\n       },\r\n      error: '',    \r\n      lang: 'en',\r\n      ChanelChoosed: '',\r\n      theyaremessages: false\r\n\r\n\r\n\r\n    }\r\n  },\r\n  async created() {\r\n    let idmessage = '';\r\n    if(this.$route.query.idmessage){            \r\n      idmessage = this.$route.query.idmessage;\r\n    } else {\r\n      if(this.$route.query.id){\r\n          this.id = this.$route.query.id;\r\n      } else {\r\n          this.$router.push(`/`);\r\n      }  \r\n    }\r\n\r\n    if(this.id && !idmessage){\r\n        try {\r\n            this.posts = await PostService.getPosts(this.id);\r\n            this.post2[0].id = this.id;\r\n            this.post2[0].ownID = this.posts[0].ownID;\r\n\r\n        } catch(err) {\r\n            this.error = err.message;\r\n        }\r\n    } else if(idmessage){\r\n        try {\r\n            this.post2 = await PostService.getMessages(idmessage, 1);\r\n            if(this.posts[0])\r\n            { \r\n              this.theyaremessages = true;\r\n            }\r\n\r\n        } catch(err) {\r\n            this.error = err.message;\r\n        }\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    ValidatePost() {\r\n      this.$validator.validate().then(result => {\r\n        if (!result) {\r\n          //console.log('No validado');\r\n          // do stuff if not valid.\r\n        } else {\r\n          //console.log('Validado');\r\n          this.createPost();\r\n        }\r\n\r\n      });\r\n    },\r\n    async createPost() {\r\n        let data = '';\r\n        //console.log('this.id11: ', this.id);\r\n        //console.log('this.id2: ', this.post2[0].idCustomer);\r\n        let idtransfer = '';\r\n\r\n\r\n        if(!this.theyaremessages){\r\n          data = await PostService.insertPost(\r\n              'insertinfo',\r\n              this.post2\r\n          );\r\n          idtransfer = this.id;\r\n          //console.log('idtransfer1: ', idtransfer);\r\n        } else {\r\n          //console.log('idtransfer2-1: ', idtransfer);\r\n          data = await PostService.updatePost(\r\n              this.post2,\r\n              'updateinfo'\r\n          );\r\n          idtransfer = this.post2[0].idCustomer;\r\n          //console.log('idtransfer2-2: ', idtransfer);\r\n        }\r\n\r\n        //console.log('idtransfer3: ', idtransfer);\r\n\r\n        this.$router.push(`ViewCostumer?id=${idtransfer}`);\r\n    }\r\n\r\n  }\r\n}\r\n",{"version":3,"sources":["InsertInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA","file":"InsertInfo.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n\r\n  <div class=\"container\">\r\n    <h1>New contact Info to event</h1>\r\n    <div class=\"create-post\">  \r\n\r\n        <h2>ID:  {{ post2[0].ownID }}</h2> \r\n        \r\n        <label>Who: </label>  \r\n        <input name=\"ContactPerson\" v-validate.continues=\"'required|min:5'\" type=\"text\" v-model=\"post2[0].ContactPerson\" placeholder=\"Name\">\r\n        <br><br>     \r\n        \r\n        <label>Info Date</label><br>\r\n        <date-picker name=\"DateInfo\" v-validate=\"'required'\"  v-model=\"post2[0].DateInfo\" type='datetime' value-type='date' :first-day-of-week=\"1\" :lang=\"lang\" placeholder=\"Introduce the communication Date\"></date-picker>\r\n        <br>\r\n        <span>{{ errors.first('DateInfo') }}</span>\r\n        <br><br>\r\n\r\n        <label>Chanel: </label>\r\n        <div>\r\n          <span>Email </span> <input class=\"radio\" type=\"radio\" name=\"ActivCustomer\" v-model=\"post2[0].ChanelChoosed\" value=\"Email\">\r\n          <span>Telephon </span> <input class=\"radio\" type=\"radio\" name=\"ActivCustomer\" v-model=\"post2[0].ChanelChoosed\" value=\"Telephon\">\r\n          <span>Skype </span> <input class=\"radio\" type=\"radio\" name=\"ActivCustomer\" v-model=\"post2[0].ChanelChoosed\" value=\"Skype\">\r\n          <span>Whatsapp </span> <input class=\"radio\" type=\"radio\" name=\"ActivCustomer\" v-model=\"post2[0].ChanelChoosed\" value=\"Whatsapp\">\r\n          <span>Facebook </span> <input class=\"radio\" type=\"radio\" name=\"ActivCustomer\" v-model=\"post2[0].ChanelChoosed\" value=\"Facebook\">\r\n          <span>Instagram </span> <input class=\"radio\" type=\"radio\" name=\"ActivCustomer\" v-model=\"post2[0].ChanelChoosed\" value=\"Instagram\">\r\n          <span>Other </span> <input class=\"radio\" type=\"radio\" name=\"ActivCustomer\" v-model=\"post2[0].ChanelChoosed\" value=\"Other\">\r\n        </div>\r\n\r\n        <br>\r\n        <label>Text, Comment, Email</label><br>\r\n        <textarea v-validate.continues=\"'required|min:10'\" name=\"comment\" form=\"usrform\"  v-model=\"post2[0].CommentsInfo\" placeholder=\"Here some coments\">Enter text here...</textarea>\r\n\r\n        <button class=\"btn\" v-on:click=\"ValidatePost\">Post!</button>\r\n\r\n    </div>\r\n    <p class=\"error\" v-if=\"error\">{{ error }}</p>\r\n\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport PostService from '../PostService'\r\nimport DatePicker from 'vue2-datepicker'\r\n\r\nexport default {\r\n  name: 'New',\r\n  components: { \r\n    DatePicker\r\n    //Home\r\n  },\r\n  data() {\r\n    return {\r\n      //contractVisible: false,\r\n      posts: {\r\n        0: {\r\n          ActivCustomer:true,\r\n          AlreadyCustomer: false,\r\n          EventInfo:{\r\n          },\r\n          BrideInfo: {\r\n          },\r\n          GroomInfo: {\r\n          },\r\n          ContractInfo: {\r\n          }\r\n        }\r\n      },\r\n       post2: {\r\n        0: {\r\n          DateInfo: new Date(),\r\n          ChanelChoosed: 'Email',\r\n          ownID: ''\r\n        }\r\n       },\r\n      error: '',    \r\n      lang: 'en',\r\n      ChanelChoosed: '',\r\n      theyaremessages: false\r\n\r\n\r\n\r\n    }\r\n  },\r\n  async created() {\r\n    let idmessage = '';\r\n    if(this.$route.query.idmessage){            \r\n      idmessage = this.$route.query.idmessage;\r\n    } else {\r\n      if(this.$route.query.id){\r\n          this.id = this.$route.query.id;\r\n      } else {\r\n          this.$router.push(`/`);\r\n      }  \r\n    }\r\n\r\n    if(this.id && !idmessage){\r\n        try {\r\n            this.posts = await PostService.getPosts(this.id);\r\n            this.post2[0].id = this.id;\r\n            this.post2[0].ownID = this.posts[0].ownID;\r\n\r\n        } catch(err) {\r\n            this.error = err.message;\r\n        }\r\n    } else if(idmessage){\r\n        try {\r\n            this.post2 = await PostService.getMessages(idmessage, 1);\r\n            if(this.posts[0])\r\n            { \r\n              this.theyaremessages = true;\r\n            }\r\n\r\n        } catch(err) {\r\n            this.error = err.message;\r\n        }\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    ValidatePost() {\r\n      this.$validator.validate().then(result => {\r\n        if (!result) {\r\n          //console.log('No validado');\r\n          // do stuff if not valid.\r\n        } else {\r\n          //console.log('Validado');\r\n          this.createPost();\r\n        }\r\n\r\n      });\r\n    },\r\n    async createPost() {\r\n        let data = '';\r\n        //console.log('this.id11: ', this.id);\r\n        //console.log('this.id2: ', this.post2[0].idCustomer);\r\n        let idtransfer = '';\r\n\r\n\r\n        if(!this.theyaremessages){\r\n          data = await PostService.insertPost(\r\n              'insertinfo',\r\n              this.post2\r\n          );\r\n          idtransfer = this.id;\r\n          //console.log('idtransfer1: ', idtransfer);\r\n        } else {\r\n          //console.log('idtransfer2-1: ', idtransfer);\r\n          data = await PostService.updatePost(\r\n              this.post2,\r\n              'updateinfo'\r\n          );\r\n          idtransfer = this.post2[0].idCustomer;\r\n          //console.log('idtransfer2-2: ', idtransfer);\r\n        }\r\n\r\n        //console.log('idtransfer3: ', idtransfer);\r\n\r\n        this.$router.push(`ViewCostumer?id=${idtransfer}`);\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 1s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n div.create-post {\r\n   text-align: left;\r\n   /*max-width: 900px;*/\r\n   margin-left: auto;\r\n   margin-right: auto;   \r\n }\r\n\r\n  div.create-post input{\r\n    width: 95%;\r\n    padding: 5px;\r\n    border: 1px solid #bdbdbd; \r\n    background-color: #f7f7f7;\r\n    color: #6e6e6e;\r\n    font-size: 16px;\r\n    max-width: 1250px;\r\n\r\n  }\r\n\r\n    div.create-post textarea{\r\n  /*div.create-post {*/\r\n    /*float: left;*/\r\n    width: 95%;\r\n    height: 150px;\r\n    margin: 5px 0 20px 0;\r\n    padding:5px;\r\n    border: 1px solid #bdbdbd; \r\n    background-color: #f7f7f7;\r\n    color: #6e6e6e;\r\n    font-size: 16px;\r\n     \r\n  }\r\n\r\n  div.create-post date-picker{\r\n    width: 95%;\r\n    height: 150px;\r\n    margin: 5px 0 20px 0;\r\n    padding:5px;\r\n    border: 1px solid #ff8c8c;\r\n    background-color: #f7f7f7;\r\n    color: #6e6e6e;\r\n    font-size: 16px;\r\n     \r\n  }\r\n\r\n\r\n/* Create a custom radio buttom */\r\ndiv.create-post .radio{\r\n  height: 0px;\r\n  width: 0px;\r\n  margin: 0 25px 0 1px;\r\n  background-color: #eee;\r\n  border: 1px solid #ff8c8c;\r\n}\r\n\r\n  div.create-post input::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n  color: rgb(192, 192, 192);\r\n  opacity: 1; /* Firefox */\r\n}\r\n\r\n  div.create-post textarea::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n  color: rgb(192, 192, 192);\r\n  opacity: 1; /* Firefox */\r\n}\r\n\r\n  div.create-post input:valid {\r\n    border: 1px solid rgb(30, 207, 30);\r\n  }\r\n\r\n  div.create-post input:invalid {\r\n    border: 2px solid red;\r\n  }\r\n\r\n  input[aria-invalid=\"true\"] {\r\n    border-color: red;\r\n  }\r\n\r\n  input[aria-invalid=\"false\"] {\r\n      border-color: green;\r\n  }\r\n\r\n  div.create-post label {\r\n    color: #919191;\r\n    font-size: 18px;\r\n\r\n  }\r\n\r\n  div.container {\r\n    max-width: 1000px;\r\n    margin: 0 auto auto 50px;\r\n  }\r\n\r\n  p.error {\r\n    border: 1px solid #ff5b5f;\r\n    background-color: #aaa5ee;\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .btn{\r\n    display: inline-block;\r\n    border: none;\r\n    background: #555;\r\n    color: #fff;\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn:hover{\r\n    background: #666;\r\n  }\r\n\r\n\r\n  .barbtn{\r\n    width: 100%;\r\n    height: 25px;\r\n    margin: 0px 0 0px 0;\r\n    padding:10px;\r\n    display: inline-block;\r\n    border: none;\r\n    background: rgb(148, 67, 67);\r\n    color: #fff;\r\n    padding: 7px 20px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .barbtn:hover{\r\n    background: rgb(190, 106, 106);\r\n  }\r\n\r\n\r\n.subFields{\r\n  margin: 10px 0 10px 25px;\r\n}\r\n\r\ndiv.subFields label{\r\n  font-size: 16px;\r\n  color: #0a009b\r\n}\r\n\r\n\r\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\r\n@media screen and (max-width: 600px) {\r\n  .divTableHead, .divTableCell, .create-post input[type=submit] {\r\n    width: 100%;\r\n    margin-top: 0;\r\n  }\r\n}\r\n\r\n\r\n</style>\r\n"]}]}